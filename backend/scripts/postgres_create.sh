#!/bin/bash

SERVICE_DB_HOST=${1:-$SERVICE_DB_HOST}
SERVICE_DB_PORT=${2:-$SERVICE_DB_PORT}
SERVICE_DB_USER=${3:-$SERVICE_DB_USER}
SERVICE_DB_PASSWORD=${4:-$SERVICE_DB_PASSWORD}
DB_NAME=${5:-$DB_NAME}
DB_USER=${6:-$DB_USER}
DB_PASSWORD=${7:-$DB_PASSWORD}

PGPASSWORD=$SERVICE_DB_PASSWORD psql -h $SERVICE_DB_HOST -p $SERVICE_DB_PORT -U $SERVICE_DB_USER -v db_name="$DB_NAME" -v db_user="$DB_USER" -v db_pass="'$DB_PASSWORD'" <<SQL
REVOKE CONNECT ON DATABASE "$DB_NAME" FROM public;
SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname = '$DB_NAME';

-- Drop database and user if they exist
DROP DATABASE IF EXISTS "$DB_NAME";
DROP USER IF EXISTS "$DB_USER";

-- Create fresh database and user
CREATE DATABASE "$DB_NAME";
CREATE USER "$DB_USER" WITH PASSWORD '$DB_PASSWORD';
ALTER ROLE "$DB_USER" NOSUPERUSER NOCREATEDB NOCREATEROLE NOINHERIT LOGIN;

-- Grant access to only this DB
GRANT CONNECT ON DATABASE "$DB_NAME" TO "$DB_USER";
REVOKE CONNECT ON DATABASE postgres FROM "$DB_USER";
REVOKE CONNECT ON DATABASE template1 FROM "$DB_USER";

-- Switch to the new database
\connect "$DB_NAME"

-- Schema permissions
REVOKE ALL ON SCHEMA public FROM PUBLIC;
GRANT USAGE, CREATE ON SCHEMA public TO "$DB_USER";

-- Default future table permissions
ALTER DEFAULT PRIVILEGES IN SCHEMA public
GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO "$DB_USER";

ALTER DEFAULT PRIVILEGES IN SCHEMA public
REVOKE ALL ON TABLES FROM PUBLIC;
SQL

