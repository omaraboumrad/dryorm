title = "Django ORM Fundamentals"
order = 2

[[chapters]]
title = "1. Defining Your First Model"
content = """from django.db import models

class Book(models.Model):
    title = models.CharField(max_length=200)
    author = models.CharField(max_length=100)

    def __str__(self):
        return f"{self.title} by {self.author}"

def run():
    book = Book.objects.create(title="Django Unleashed", author="Andrew Pinkham")
    print(f"Created: {book}")"""

[[chapters]]
title = "2. Querying Data"
content = """from django.db import models

class Book(models.Model):
    title = models.CharField(max_length=200)
    author = models.CharField(max_length=100)

def run():
    Book.objects.bulk_create([
        Book(title="Two Scoops of Django", author="Greenfeld"),
        Book(title="Django for APIs", author="William Vincent"),
    ])

    print("All books:")
    for book in Book.objects.all():
        print(book.title)"""

[[chapters]]
title = "3. Filtering and Ordering"
content = """from django.db import models

class Book(models.Model):
    title = models.CharField(max_length=200)
    author = models.CharField(max_length=100)
    year = models.PositiveIntegerField()

def run():
    Book.objects.bulk_create([
        Book(title="Django 4 By Example", author="Antonio Melé", year=2023),
        Book(title="Lightweight Django", author="Julia Elman", year=2014),
    ])

    recent_books = Book.objects.filter(year__gte=2020).order_by("-year")
    for b in recent_books:
        print(f"{b.title} ({b.year})")"""

[[chapters]]
title = "4. Relationships (ForeignKey)"
content = """from django.db import models

class Author(models.Model):
    name = models.CharField(max_length=100)

class Book(models.Model):
    title = models.CharField(max_length=200)
    author = models.ForeignKey(Author, on_delete=models.CASCADE)

def run():
    a1 = Author.objects.create(name="William Vincent")
    a2 = Author.objects.create(name="Antonio Melé")

    Book.objects.create(title="Django for Beginners", author=a1)
    Book.objects.create(title="Django 4 By Example", author=a2)

    for author in Author.objects.prefetch_related('book_set'):
        print(f"{author.name} wrote {author.book_set.count()} books")"""

[[chapters]]
title = "5. Aggregations"
content = """from django.db import models
from django.db.models import Count
from tabulate import tabulate

class Author(models.Model):
    name = models.CharField(max_length=100)

class Book(models.Model):
    title = models.CharField(max_length=200)
    author = models.ForeignKey(Author, on_delete=models.CASCADE)

def run():
    a1 = Author.objects.create(name="William Vincent")
    a2 = Author.objects.create(name="Antonio Melé")

    Book.objects.bulk_create([
        Book(title="Django for APIs", author=a1),
        Book(title="Django for Professionals", author=a1),
        Book(title="Django 4 By Example", author=a2),
    ])

    stats = Author.objects.annotate(total_books=Count("book"))
    print(tabulate(stats.values("name", "total_books"), headers="keys", tablefmt="psql"))"""

